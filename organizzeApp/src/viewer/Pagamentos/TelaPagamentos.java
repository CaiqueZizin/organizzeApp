/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewer.Pagamentos;

import viewer.Pagamentos.*;
import controler.CRUD_Contas;
import controler.CRUD_Pagamentos;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import model.Pagamentos;
import static viewer.Contas.TelaContas.tbPreco;
import viewer.Tela;
import viewer.Tela;

/**
 *
 * @author Caique
 */
public class TelaPagamentos extends javax.swing.JInternalFrame {
    ButtonGroup grupoBotoes = new ButtonGroup();
    /**
     * Creates new form Pagamentos
     */
    public TelaPagamentos() {
        initComponents();
        btDeletar.setEnabled(false);
        btEditar.setEnabled(false);
        btReceber.setEnabled(false);
        
        grupoBotoes.add(radioFixo);
        grupoBotoes.add(radioParcelado);
        
        for(int i = 0 ; i <= 320; i++){
            itensParcelas.addItem(i + "");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tbNome = new javax.swing.JTextField();
        tbValor = new javax.swing.JTextField();
        tbId = new javax.swing.JTextField();
        btSalvar = new javax.swing.JButton();
        btVerPagamentos = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btVerPagamentosHoje = new javax.swing.JButton();
        btReceber = new javax.swing.JButton();
        btDeletar = new javax.swing.JButton();
        btVerPagamentosAtrasados = new javax.swing.JButton();
        txtTodosPagamentos = new javax.swing.JLabel();
        txtTodosPagamentosAtrasados = new javax.swing.JLabel();
        txtTodosPagamentosHoje = new javax.swing.JLabel();
        calendario = new com.github.lgooddatepicker.components.DatePicker();
        btEditar = new javax.swing.JButton();
        radioFixo = new javax.swing.JRadioButton();
        radioParcelado = new javax.swing.JRadioButton();
        itensParcelas = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        itensRepeticao = new javax.swing.JComboBox();
        txtTodosPagamentosAmanha = new javax.swing.JLabel();
        btVerPagamentosAmanha = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        itensCategoria = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Tela Pagamentos");
        setPreferredSize(new java.awt.Dimension(924, 640));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameDeactivated(evt);
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setText("ID");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(42, 1, 19, 25);

        jLabel4.setText("Nome :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(42, 32, 59, 14);

        jLabel6.setText("Data de Recebimento");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(40, 170, 180, 17);

        jLabel7.setText("Valor");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(40, 120, 59, 21);
        getContentPane().add(tbNome);
        tbNome.setBounds(50, 50, 137, 27);
        getContentPane().add(tbValor);
        tbValor.setBounds(50, 140, 137, 25);

        tbId.setDragEnabled(true);
        tbId.setEnabled(false);
        getContentPane().add(tbId);
        tbId.setBounds(65, 2, 69, 23);

        btSalvar.setText("SALVAR PAGAMENTO");
        btSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btSalvarMouseReleased(evt);
            }
        });
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btSalvar);
        btSalvar.setBounds(180, 310, 160, 23);

        btVerPagamentos.setText("TOTAL");
        btVerPagamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerPagamentosActionPerformed(evt);
            }
        });
        getContentPane().add(btVerPagamentos);
        btVerPagamentos.setBounds(400, 30, 180, 23);

        btLimpar.setText("LIMPAR CAMPOS");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });
        getContentPane().add(btLimpar);
        btLimpar.setBounds(30, 310, 137, 23);

        btVerPagamentosHoje.setText("  HOJE");
        btVerPagamentosHoje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerPagamentosHojeActionPerformed(evt);
            }
        });
        getContentPane().add(btVerPagamentosHoje);
        btVerPagamentosHoje.setBounds(420, 130, 160, 23);

        btReceber.setText("Receber Pagamento");
        btReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReceberActionPerformed(evt);
            }
        });
        getContentPane().add(btReceber);
        btReceber.setBounds(420, 200, 160, 23);

        btDeletar.setText("DELETAR PAGAMENTO");
        btDeletar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btDeletarMouseReleased(evt);
            }
        });
        btDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeletarActionPerformed(evt);
            }
        });
        getContentPane().add(btDeletar);
        btDeletar.setBounds(80, 340, 210, 23);

        btVerPagamentosAtrasados.setText(" ATRASADOS");
        btVerPagamentosAtrasados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerPagamentosAtrasadosActionPerformed(evt);
            }
        });
        getContentPane().add(btVerPagamentosAtrasados);
        btVerPagamentosAtrasados.setBounds(430, 170, 150, 23);

        txtTodosPagamentos.setForeground(new java.awt.Color(51, 153, 255));
        txtTodosPagamentos.setText("N°");
        getContentPane().add(txtTodosPagamentos);
        txtTodosPagamentos.setBounds(390, 20, 90, 14);

        txtTodosPagamentosAtrasados.setForeground(new java.awt.Color(51, 153, 255));
        txtTodosPagamentosAtrasados.setText("N°");
        getContentPane().add(txtTodosPagamentosAtrasados);
        txtTodosPagamentosAtrasados.setBounds(430, 160, 40, 10);

        txtTodosPagamentosHoje.setForeground(new java.awt.Color(51, 153, 255));
        txtTodosPagamentosHoje.setText("N°");
        getContentPane().add(txtTodosPagamentosHoje);
        txtTodosPagamentosHoje.setBounds(410, 120, 60, 14);
        getContentPane().add(calendario);
        calendario.setBounds(50, 190, 197, 25);

        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btEditar);
        btEditar.setBounds(260, 0, 72, 23);

        radioFixo.setText("Fixo");
        radioFixo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFixoActionPerformed(evt);
            }
        });
        getContentPane().add(radioFixo);
        radioFixo.setBounds(40, 220, 45, 23);

        radioParcelado.setText("Parcelado");
        radioParcelado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioParceladoActionPerformed(evt);
            }
        });
        getContentPane().add(radioParcelado);
        radioParcelado.setBounds(190, 220, 100, 23);

        getContentPane().add(itensParcelas);
        itensParcelas.setBounds(40, 270, 59, 20);

        jLabel2.setText("Parcelas restantes");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 250, 128, 15);

        itensRepeticao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Diária", "Semanal", "Quinzenal", "Mensal", "Bimestral", "Trimestral", "Semestral", "Anual" }));
        getContentPane().add(itensRepeticao);
        itensRepeticao.setBounds(190, 270, 89, 20);

        txtTodosPagamentosAmanha.setForeground(new java.awt.Color(51, 153, 255));
        txtTodosPagamentosAmanha.setText("N°");
        getContentPane().add(txtTodosPagamentosAmanha);
        txtTodosPagamentosAmanha.setBounds(400, 80, 90, 10);

        btVerPagamentosAmanha.setText(" AMANHÃ");
        btVerPagamentosAmanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerPagamentosAmanhaActionPerformed(evt);
            }
        });
        getContentPane().add(btVerPagamentosAmanha);
        btVerPagamentosAmanha.setBounds(410, 90, 170, 23);

        jLabel3.setText("Categoria :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 80, 80, 14);

        itensCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Salário", "Empréstimos", "Investimentos", "Outras receitas" }));
        getContentPane().add(itensCategoria);
        itensCategoria.setBounds(50, 100, 150, 20);

        jLabel5.setText("PAGAMENTOS :");
        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(450, 10, 140, 20);

        jLabel8.setText("A RECEBER :");
        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        getContentPane().add(jLabel8);
        jLabel8.setBounds(450, 60, 110, 20);

        jLabel9.setText("R$ :");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(30, 140, 30, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameDeactivated
        //Quando a tela for desativada, setamos que ela podera ser chamada outra vez
        Tela.mnuLancamentos.setEnabled(true);
        Tela.btPagamentos.setEnabled(true);
        Tela.btResolverPagamentos.setEnabled(true);
    }//GEN-LAST:event_formInternalFrameDeactivated

    private void btVerPagamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerPagamentosActionPerformed
        // TODO add your handling code here:
        PesquisaPagamentos tela = new PesquisaPagamentos();
        tela.setVisible(true);
    }//GEN-LAST:event_btVerPagamentosActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        //Quando clicar no botão Limpar Campos
        LimparCampos();
        //Habilitamos os campos para inserção de novas contas novamente
        tbNome.setEnabled(true);
        tbValor.setEnabled(true);
        itensCategoria.setEnabled(true);
        itensCategoria.setSelectedIndex(0);
        itensParcelas.setEnabled(true);
        itensRepeticao.setEnabled(true);
        calendario.setEnabled(true);
        btSalvar.setEnabled(true);
        radioFixo.setEnabled(true);
        radioParcelado.setEnabled(true);
        //Desabilitamos o botões abaixo  pois não há conta selecionada
        btDeletar.setEnabled(false);
        btReceber.setEnabled(false);
        btEditar.setEnabled(false);
    }//GEN-LAST:event_btLimparActionPerformed

    private void btVerPagamentosHojeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerPagamentosHojeActionPerformed
        // TODO add your handling code here:
        PesquisaPagamentosHOJE tela = new PesquisaPagamentosHOJE();
        tela.setVisible(true);
    }//GEN-LAST:event_btVerPagamentosHojeActionPerformed

    private void btReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReceberActionPerformed
        //Aqui faremos a ação quando for solicitado pagamento da conta
        Pagamentos pags = new Pagamentos();
        CRUD_Pagamentos crud = new CRUD_Pagamentos();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        
        pags.setId(Integer.parseInt(tbId.getText()));
        pags.setRepeticao(itensRepeticao.getSelectedItem() + "");
        pags.setValor(Double.parseDouble(tbValor.getText()));
        try {
            pags.setData(formato.parse(calendario.getDate() + ""));
        } catch (ParseException ex) {
            Logger.getLogger(TelaPagamentos.class.getName()).log(Level.SEVERE, null, ex);
        }
        pags.setCategoria(itensCategoria.getSelectedItem() + "");
        //Vamos ver se tem parcelas essa conta ppara  podermos executar ocomanddo que diminui 1
        //parcela dessa conta
        int parc = itensParcelas.getSelectedIndex();
        if(parc > 1){
           crud.diminuirParcela(pags);
        }
        //Agora vamos Fazer sua repetição
        int op = itensRepeticao.getSelectedIndex();
                
        if(op == 0){crud.pagarDia(pags, 1);}
        if(op == 1){crud.pagarDia(pags, 7);}
        if(op == 2){crud.pagarDia(pags, 15);}
        if(op == 3){crud.pagarMes(pags, 1);}
        if(op == 4){crud.pagarMes(pags, 2);}
        if(op == 5){crud.pagarMes(pags, 3);}
        if(op == 6){crud.pagarMes(pags, 6);}
        if(op == 7){crud.pagarAno(pags);}
        //Atualizar Saldo
        crud.attSaldo(pags);
        //Atualizar as metas
        crud.attMeta(pags);
        try {
            //Jogar conta para o historico do mês
            crud.attHistoricoPagamento(pags);
        } catch (ParseException ex) {
            Logger.getLogger(TelaPagamentos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Se a parcela for == 1 quer dizer que é a ultima parcela,então só precisamos atualizar o saldo
        //e jogar em relatórios
        if(parc == 1){
            //Vamos deletar o pagamento pois o mesmo chegou a parcela  0
            String msg = " parabéns você terminou de receber as parcelas deste pagamento ! "
                    + " \n Agora a mesma será retirada da sua  tabela de pagamentos  !";
            crud.excluir(pags , msg);
        }
        //Após executado o recebimento vamos atualizar nossas notificações
        notifica();
        LimparCampos();
        //Agora que limpamos os campos vamos setar para  que possa ser e editados novamente os campos
        tbNome.setEnabled(true);
        tbValor.setEnabled(true);
        calendario.setEnabled(true);
        radioFixo.setEnabled(true);
        radioParcelado.setEnabled(true);
        itensCategoria.setEnabled(true);
        itensParcelas.setEnabled(true);
        itensRepeticao.setEnabled(true);
        btSalvar.setEnabled(true);
        btDeletar.setEnabled(false);
        btEditar.setEnabled(false);
        btReceber.setEnabled(false);
    }//GEN-LAST:event_btReceberActionPerformed

    private void btDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeletarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btDeletarActionPerformed

    private void btDeletarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDeletarMouseReleased
        //Caso ele clique em excluir sem ter selecionado um pagamento ,vamos alerta-lo
        if(tbId.getText().toString().isEmpty()){
            JOptionPane.showMessageDialog(null,
                    "Favor Selecionar uma conta \n"
                  + "para excluir !"
                    ,"Aviso"
                    ,JOptionPane.WARNING_MESSAGE);
        //Caso tenha selecionado vamos excluir o pagamento
        }else{
            CRUD_Pagamentos crud = new CRUD_Pagamentos();
            Pagamentos pags = new Pagamentos();
            pags.setId(Integer.parseInt(tbId.getText()));
            String msg = "Dados Deletados Com Sucesso !";
            crud.excluir(pags , msg);
        }
        notifica();
        LimparCampos();
        tbNome.setEnabled(true);
        tbValor.setEnabled(true);
        calendario.setEnabled(true);
        radioFixo.setEnabled(true);
        radioParcelado.setEnabled(true);
        itensCategoria.setEnabled(true);
        itensCategoria.setSelectedIndex(0);
        itensParcelas.setEnabled(true);
        itensRepeticao.setEnabled(true);
        btSalvar.setEnabled(true);
        btDeletar.setEnabled(false);
        btEditar.setEnabled(false);
    }//GEN-LAST:event_btDeletarMouseReleased

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btSalvarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSalvarMouseReleased
        //Tratamento de Erros Iniciais
        if(tbNome.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Preencha o campo Nome !");
        }else if(tbValor.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Preencha o campo Valor !");
        }else if(calendario.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Selecione uma Data !");
        }else{
            //Instanciando classes
            Pagamentos pags = new Pagamentos();
            CRUD_Pagamentos crud = new CRUD_Pagamentos();
            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            //Pegando Nome e Valor do Pagamento
            pags.setNome(tbNome.getText());
            //Aqui vamos transformar o valor do pagamento informado em apenas 2 casas decimais 
            //ou seja de 99.999999 para 99.99
            double valor = Double.parseDouble(tbValor.getText());
            DecimalFormat formatoDinheiro = new DecimalFormat("#.00");
            String precoReal = formatoDinheiro.format(valor);         
            valor = Double.parseDouble(precoReal.replace(",","."));        
            //Setando o valor corretamente 
            pags.setValor(valor);
            pags.setCategoria(itensCategoria.getSelectedItem() + "");
            pags.setRepeticao(itensRepeticao.getSelectedItem() + "");
            pags.setParcelas(Integer.parseInt(itensParcelas.getSelectedItem().toString()));
            //Pegando a data e guardando em uma string
            String dat = calendario.getDate() + "";

            try {
                 pags.setData(formato.parse(dat));
            } catch (ParseException ex) {
                Logger.getLogger(TelaPagamentos.class.getName()).log(Level.SEVERE, null, ex);
            }

            // Ao clicar no botão salvar, vamos  verificar se ele esta inserindo um novo pagamento
            if(tbId.getText().isEmpty()){    
                crud.inserir(pags);
                //Caso não esteja inserindo , vamos alterar o pagamento
            }else{
                pags.setId(Integer.parseInt(tbId.getText()));
                //Aqui vamos verificar se o pagamento a alterar terá ou não parcelas
                if((Integer.parseInt(itensParcelas.getSelectedItem().toString())) == 0){
                    crud.alterar(pags);
                }
                else{
                    pags.setParcelas(Integer.parseInt(itensParcelas.getSelectedItem().toString()));
                    crud.alterar(pags);
                }
            }
            notifica();
        }
    }//GEN-LAST:event_btSalvarMouseReleased

    private void btVerPagamentosAtrasadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerPagamentosAtrasadosActionPerformed
        // TODO add your handling code here:
        PesquisaPagamentosAtrasados tela = new PesquisaPagamentosAtrasados();
        tela.setVisible(true);
    }//GEN-LAST:event_btVerPagamentosAtrasadosActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        notifica();
    }//GEN-LAST:event_formInternalFrameActivated

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        //Aqui faremos o código do botão Editar

        //Setamos que os campos podem ser alterados
        tbNome.setEnabled(true);
        tbValor.setEnabled(true);
        itensCategoria.setEnabled(true);
        itensParcelas.setEnabled(true);
        itensRepeticao.setEnabled(true);
        calendario.setEnabled(true);
        radioFixo.setEnabled(true);
        radioParcelado.setEnabled(true);        
        //Aqui Faremos para quando ele clicar em Editar ja  carregar o radio correto do pagamento
        //e executar seu comando
        
        if(radioFixo.isSelected()){
            itensParcelas.setEnabled(false);
        }
        //e que não se pode mais apertar nesses botões
        btReceber.setEnabled(false);
        btEditar.setEnabled(false);
        btSalvar.setEnabled(true);   
    }//GEN-LAST:event_btEditarActionPerformed

    private void radioFixoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFixoActionPerformed
        //Aqui faremos quando ele escolher que o pagamento será 
        //fixo, os itens de parcelas serão desabilitados
        if(radioFixo.isSelected()){
            itensParcelas.setSelectedItem("0");
            itensParcelas.setEnabled(false);
        }     
    }//GEN-LAST:event_radioFixoActionPerformed

    private void radioParceladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioParceladoActionPerformed
        //Código para caso ele marque que será um pagamento parcelado
        //então iremos habilitar os itens de parcela
        if(radioParcelado.isSelected()){
            itensParcelas.setEnabled(true);
        }
    }//GEN-LAST:event_radioParceladoActionPerformed

    private void btVerPagamentosAmanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerPagamentosAmanhaActionPerformed
        // 
        PesquisaPagamentosAmanha tela = new PesquisaPagamentosAmanha();
        tela.setVisible(true);
    }//GEN-LAST:event_btVerPagamentosAmanhaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btDeletar;
    public static javax.swing.JButton btEditar;
    private javax.swing.JButton btLimpar;
    public static javax.swing.JButton btReceber;
    public static javax.swing.JButton btSalvar;
    private javax.swing.JButton btVerPagamentos;
    private javax.swing.JButton btVerPagamentosAmanha;
    private javax.swing.JButton btVerPagamentosAtrasados;
    private javax.swing.JButton btVerPagamentosHoje;
    public static com.github.lgooddatepicker.components.DatePicker calendario;
    public static javax.swing.JComboBox itensCategoria;
    public static javax.swing.JComboBox itensParcelas;
    public static javax.swing.JComboBox itensRepeticao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public static javax.swing.JRadioButton radioFixo;
    public static javax.swing.JRadioButton radioParcelado;
    public static javax.swing.JTextField tbId;
    public static javax.swing.JTextField tbNome;
    public static javax.swing.JTextField tbValor;
    private javax.swing.JLabel txtTodosPagamentos;
    private javax.swing.JLabel txtTodosPagamentosAmanha;
    private javax.swing.JLabel txtTodosPagamentosAtrasados;
    private javax.swing.JLabel txtTodosPagamentosHoje;
    // End of variables declaration//GEN-END:variables
    private void LimparCampos() {
        //Aqui sim mandamos ele executar o comando onde exclui o conteudo de todos os textos
        //e damos o foco ao campo Nome
        
        tbId.setText("");
        tbNome.setText("");
        tbValor.setText("");
        itensParcelas.setSelectedItem("0");
        calendario.setText("");
        tbNome.requestFocus();
    }
    
    private void notifica(){
        //Aqui será setado nas notificações a quantidade dos pagamentos no total,receber hoje,amanhã e atarsados
        CRUD_Pagamentos crud = new CRUD_Pagamentos();
        
        txtTodosPagamentos.setText(crud.notifiTodosPagamentos() + "");
        txtTodosPagamentosHoje.setText(crud.notifiTodosPagamentosHoje() + "");
        txtTodosPagamentosAmanha.setText(crud.notifiTodosPagamentosAmanha() + "");
        txtTodosPagamentosAtrasados.setText(crud.notifiTodosPagamentosAtrasados() + "");
    }
    
}
