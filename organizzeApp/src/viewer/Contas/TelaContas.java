/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewer.Contas;

import controler.CRUD_Contas;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import model.Contas;
import viewer.Tela;
import viewer.Tela;

/**
 *
 * @author Caique
 */
public class TelaContas extends javax.swing.JInternalFrame {
    ButtonGroup grupoBotoes = new ButtonGroup();
    /**
     * Creates new form Contas
     */
    public TelaContas() {
        initComponents();
        //ja de inicio desabilitamos os botões Deleta,Editar e pagar pois pra isso é necessario selecionar uma conta
        btDeletar.setEnabled(false);
        btEditar.setEnabled(false);
        btPagar.setEnabled(false);
        
        //Criamos o grupo de botões radio, para que ao marcar um o outro se desmarque
        grupoBotoes.add(radioFixo);
        grupoBotoes.add(radioParcelado);
        
        //Para criar na caixa de itens os itens de 0 a 320 automaticamente
        for(int i = 0 ; i <= 320; i++){
            itensParcelas.addItem(i + "");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tbNome = new javax.swing.JTextField();
        tbPreco = new javax.swing.JTextField();
        tbId = new javax.swing.JTextField();
        btSalvar = new javax.swing.JButton();
        btVerContas = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btVerContasHoje = new javax.swing.JButton();
        btPagar = new javax.swing.JButton();
        btDeletar = new javax.swing.JButton();
        btVerContasAtrasadas = new javax.swing.JButton();
        txtTodasContas = new javax.swing.JLabel();
        txtTodasContasAtrasadas = new javax.swing.JLabel();
        txtTodasContasHoje = new javax.swing.JLabel();
        calendario = new com.github.lgooddatepicker.components.DatePicker();
        btEditar = new javax.swing.JButton();
        radioFixo = new javax.swing.JRadioButton();
        radioParcelado = new javax.swing.JRadioButton();
        itensParcelas = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        itensRepeticao = new javax.swing.JComboBox();
        txtTodasContasAtrasadas1 = new javax.swing.JLabel();
        btVerContasAmanha = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Tela Contas");
        setPreferredSize(new java.awt.Dimension(924, 640));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameDeactivated(evt);
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setText("ID");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(42, 1, 19, 25);

        jLabel4.setText("Nome");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(42, 32, 59, 14);

        jLabel6.setText("Data de Pagamento");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(40, 136, 117, 17);

        jLabel7.setText("Preço");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(40, 80, 59, 21);
        getContentPane().add(tbNome);
        tbNome.setBounds(50, 50, 137, 27);
        getContentPane().add(tbPreco);
        tbPreco.setBounds(50, 100, 137, 25);

        tbId.setDragEnabled(true);
        tbId.setEnabled(false);
        getContentPane().add(tbId);
        tbId.setBounds(65, 2, 69, 23);

        btSalvar.setText("SALVAR CONTA");
        btSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btSalvarMouseReleased(evt);
            }
        });
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btSalvar);
        btSalvar.setBounds(160, 290, 127, 23);

        btVerContas.setText("TOTAL");
        btVerContas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerContasActionPerformed(evt);
            }
        });
        getContentPane().add(btVerContas);
        btVerContas.setBounds(430, 40, 156, 23);

        btLimpar.setText("LIMPAR CAMPOS");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });
        getContentPane().add(btLimpar);
        btLimpar.setBounds(20, 290, 137, 23);

        btVerContasHoje.setText("HOJE");
        btVerContasHoje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerContasHojeActionPerformed(evt);
            }
        });
        getContentPane().add(btVerContasHoje);
        btVerContasHoje.setBounds(446, 150, 140, 23);

        btPagar.setText("Pagar Conta");
        btPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPagarActionPerformed(evt);
            }
        });
        getContentPane().add(btPagar);
        btPagar.setBounds(471, 220, 120, 23);

        btDeletar.setText("DELETAR CONTA");
        btDeletar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btDeletarMouseReleased(evt);
            }
        });
        btDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeletarActionPerformed(evt);
            }
        });
        getContentPane().add(btDeletar);
        btDeletar.setBounds(80, 320, 170, 23);

        btVerContasAtrasadas.setText("ATRASADAS");
        btVerContasAtrasadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerContasAtrasadasActionPerformed(evt);
            }
        });
        getContentPane().add(btVerContasAtrasadas);
        btVerContasAtrasadas.setBounds(460, 190, 130, 23);

        txtTodasContas.setText("N°");
        txtTodasContas.setForeground(new java.awt.Color(51, 153, 255));
        getContentPane().add(txtTodasContas);
        txtTodasContas.setBounds(430, 30, 60, 14);

        txtTodasContasAtrasadas.setText("N°");
        txtTodasContasAtrasadas.setForeground(new java.awt.Color(51, 153, 255));
        getContentPane().add(txtTodasContasAtrasadas);
        txtTodasContasAtrasadas.setBounds(460, 180, 40, 10);

        txtTodasContasHoje.setText("N°");
        txtTodasContasHoje.setForeground(new java.awt.Color(51, 153, 255));
        getContentPane().add(txtTodasContasHoje);
        txtTodasContasHoje.setBounds(440, 140, 40, 14);
        getContentPane().add(calendario);
        calendario.setBounds(50, 156, 197, 25);

        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btEditar);
        btEditar.setBounds(214, 2, 72, 23);

        radioFixo.setText("Fixo");
        radioFixo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFixoActionPerformed(evt);
            }
        });
        getContentPane().add(radioFixo);
        radioFixo.setBounds(50, 199, 60, 23);

        radioParcelado.setText("Parcelado");
        radioParcelado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioParceladoActionPerformed(evt);
            }
        });
        getContentPane().add(radioParcelado);
        radioParcelado.setBounds(197, 199, 90, 23);

        getContentPane().add(itensParcelas);
        itensParcelas.setBounds(50, 250, 59, 20);

        jLabel2.setText("Parcelas restantes");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(50, 229, 128, 15);

        itensRepeticao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Diária", "Semanal", "Quinzenal", "Mensal", "Bimestral", "Trimestral", "Semestral", "Anual" }));
        getContentPane().add(itensRepeticao);
        itensRepeticao.setBounds(197, 250, 89, 20);

        txtTodasContasAtrasadas1.setForeground(new java.awt.Color(51, 153, 255));
        txtTodasContasAtrasadas1.setText("N°");
        getContentPane().add(txtTodasContasAtrasadas1);
        txtTodasContasAtrasadas1.setBounds(430, 100, 70, 10);

        btVerContasAmanha.setText("AMANHÃ");
        btVerContasAmanha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVerContasAmanhaActionPerformed(evt);
            }
        });
        getContentPane().add(btVerContasAmanha);
        btVerContasAmanha.setBounds(430, 110, 156, 23);

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel3.setText("CONTAS :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(470, 10, 80, 20);

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel5.setText("A PAGAR :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(470, 80, 90, 20);

        jLabel8.setText("R$ :");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(30, 100, 30, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameDeactivated
        //Quando a tela for desativada, setamos que ela podera ser chamada outra vez
        Tela.btContas.setEnabled(true);
        Tela.btResolverContas.setEnabled(true);
    }//GEN-LAST:event_formInternalFrameDeactivated

    private void btVerContasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerContasActionPerformed
        // TODO add your handling code here:
        PesquisaContas tela = new PesquisaContas();
        tela.setVisible(true);
    }//GEN-LAST:event_btVerContasActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        //Quando clicar no botão Limpar Campos
        LimparCampos();
        //Habilitamos os  campos para inserção de novas contas novamente
        tbNome.setEnabled(true);
        tbPreco.setEnabled(true);
        itensParcelas.setEnabled(true);
        itensRepeticao.setEnabled(true);
        itensRepeticao.setSelectedIndex(0);
        calendario.setEnabled(true);
        btSalvar.setEnabled(true);
        radioFixo.setEnabled(true);
        radioParcelado.setEnabled(true);
        //desabilitamos o botões abaixo  pois não havera conta selecionada
        btDeletar.setEnabled(false);
        btPagar.setEnabled(false);
        btEditar.setEnabled(false);
    }//GEN-LAST:event_btLimparActionPerformed

    private void btVerContasHojeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerContasHojeActionPerformed
        //Chamamos a tela que trará as contas a pagar hoje
        PesquisaContasHOJE tela = new PesquisaContasHOJE();
        tela.setVisible(true);
    }//GEN-LAST:event_btVerContasHojeActionPerformed

    private void btPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPagarActionPerformed
        //Aqui faremos a ação quando for solicitado pagamento da conta
        Contas contas = new Contas();
        CRUD_Contas crud = new CRUD_Contas();
        
        contas.setId(Integer.parseInt(tbId.getText()));
        contas.setRepeticao(itensRepeticao.getSelectedItem() + "");
        contas.setPreco(Double.parseDouble(tbPreco.getText()));
        
        //Agora vamos pegar a data da conta para podermos jogar no relatório     
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM");
        String dat = calendario.getDate() + "";

        try {
            contas.setData(formato.parse(dat));
        } catch (ParseException ex) {
            Logger.getLogger(TelaContas.class.getName()).log(Level.SEVERE, null, ex);
        }
        //Vamos ver se essa conta tem parcelas  para  podermos executar o comando que diminui 1 parcela
        int parc = itensParcelas.getSelectedIndex();
        if(parc > 1){
           crud.diminuirParcela(contas);
        }
        //Agora vamos Fazer sua repetição ou seja , se hoje é dia 1 e ele é diario , pula pro dia 2
        //Aqui pegamos o número da opção de repetição que foi informada
        int op = itensRepeticao.getSelectedIndex();
        //Sabemos que a 1° é diária, 2° semanal, etc...
        //logo apenas chamamos o método correspondente e passamos o N° de dias ou Meses
        if(op == 0){crud.pagarDia(contas, 1);}
        if(op == 1){crud.pagarDia(contas, 7);}
        if(op == 2){crud.pagarDia(contas, 15);}
        if(op == 3){crud.pagarMes(contas, 1);}
        if(op == 4){crud.pagarMes(contas, 2);}
        if(op == 5){crud.pagarMes(contas, 3);}
        if(op == 6){crud.pagarMes(contas, 6);}
        if(op == 7){crud.pagarAno(contas);}
        //Atualizar Saldo
        crud.attSaldo(contas);
        try {
            //Jogar conta para o historico do mês
            crud.attHistoricoConta(contas);
        } catch (ParseException ex) {
            Logger.getLogger(TelaContas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Se a parcela for == 1 quer dizer que é a ultima parcela,então só precisamos atualizar o saldo
        //e jogar em relatiórios
        if(parc == 1){
            //Vamos deletar a conta pois a mesma chegou a parcela == 0
            String msg = " parabéns você terminou de pagar as parcelas desta  conta ! "
                    + " \n Agora a mesma será retirada da sua  tabela de contas  !";
            crud.excluir(contas , msg);
        }
        //Após executado o pagamento vamos atualizar nossas notificações
        notifica();
        LimparCampos();
        //Agora que limpamos os campos, vamos setar para  que possa ser editado novamente os campos
        tbNome.setEnabled(true);
        tbPreco.setEnabled(true);
        calendario.setEnabled(true);
        radioFixo.setEnabled(true);
        radioParcelado.setEnabled(true);
        itensParcelas.setEnabled(true);
        itensRepeticao.setEnabled(true);
        btSalvar.setEnabled(true);
        
        //Já que não terá mais uma conta selecionada vamos desabilitar os botões que necessitam da mesma
        btDeletar.setEnabled(false);
        btEditar.setEnabled(false);
        btPagar.setEnabled(false);
    }//GEN-LAST:event_btPagarActionPerformed

    private void btDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeletarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btDeletarActionPerformed

    private void btDeletarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDeletarMouseReleased
        //Caso ele clique em excluir sem ter selecionado uma conta ,vamos alerta-lo
        if(tbId.getText().toString().isEmpty()){
            JOptionPane.showMessageDialog(null,
                    "Favor Selecionar uma conta \n"
                  + "para excluir !"
                    ,"Aviso"
                    ,JOptionPane.WARNING_MESSAGE);
        //Caso tenha selecionado vamos excluir a conta
        }else{
            CRUD_Contas crud = new CRUD_Contas();
            Contas contas = new Contas();
            contas.setId(Integer.parseInt(tbId.getText()));
            //Após pegarmos o ID da conta chamamos o método para excluir passando o ID e uma mensagem que será  mostrada
            String msg = "Dados Deletados Com Sucesso !";
            crud.excluir(contas , msg);
        }
        notifica();
        LimparCampos();
        tbNome.setEnabled(true);
        tbPreco.setEnabled(true);
        radioFixo.setEnabled(true);
        radioParcelado.setEnabled(true);
        itensParcelas.setEnabled(true);
        itensRepeticao.setEnabled(true);
        calendario.setEnabled(true);
        btSalvar.setEnabled(true);
    }//GEN-LAST:event_btDeletarMouseReleased

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btSalvarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSalvarMouseReleased
        //Tratamento de erros iniciais
        //Caso nome,preço ou data para conta estejam Vazios
        if(tbNome.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Preencha o campo Nome !");
        }else if(tbPreco.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Preencha o campo Preço !");
        }else if(calendario.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Selecione uma Data !");
        }else{
            //Instanciando classes
            Contas contas = new Contas();
            CRUD_Contas crud = new CRUD_Contas();
            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            //Pegando Nome e Preço da Conta
            contas.setNome(tbNome.getText());
            //Aqui vamos transformar a conta informada em apenas 2 casa decimais 
            //ou seja de 99.999999 para 99.99
            double preco = Double.parseDouble(tbPreco.getText());
            DecimalFormat formatoDinheiro = new DecimalFormat("#.00");
            String precoReal = formatoDinheiro.format(preco);         
            preco = Double.parseDouble(precoReal.replace(",","."));        
            //Setando o Preço corretamente
            contas.setPreco(preco);
            contas.setRepeticao(itensRepeticao.getSelectedItem() + "");
            contas.setParcelas(Integer.parseInt(itensParcelas.getSelectedItem().toString()));
            //Pegando a data informada e guardando em uma string 
            String dat = calendario.getDate() + "";
            try{
                 //Tentado setar a data informada no formato(ANO-MES-DIA) ou seja ("yyyy-MM-dd")
                 contas.setData(formato.parse(dat));
            } catch (ParseException ex) {
                Logger.getLogger(TelaContas.class.getName()).log(Level.SEVERE, null, ex);
            }

            //Ao clicar no botão salvar, vamos  verificar se ele esta inserindo uma nova conta
            if(tbId.getText().isEmpty()){    
                crud.inserir(contas);
                //Caso não esteja inserindo , vamos alterar a conta
            }else{
                contas.setId(Integer.parseInt(tbId.getText()));
                //Aqui vamos verificar se os novos dados para a conta terão ou não parcelas
                if((Integer.parseInt(itensParcelas.getSelectedItem().toString())) == 0){
                    //Caso não tenham vamos apenas chamar o método pois parcelas será == 0 na nossa classe de entidade , logo será setado no banco parcelas == Null (Conta Infinita)
                    crud.alterar(contas);
                }
                else{
                    //Caso tenha parcelas capturamos e alocamos na nossa classe de entidade,em seguida chamamos nosso método para alterar
                    contas.setParcelas(Integer.parseInt(itensParcelas.getSelectedItem().toString()));
                    crud.alterar(contas);
                }
            }
            //Após feita alterações vamos atualizar as notificações
            notifica();
        }
    }//GEN-LAST:event_btSalvarMouseReleased

    private void btVerContasAtrasadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerContasAtrasadasActionPerformed
        // TODO add your handling code here:
        PesquisaContasAtrasadas tela = new PesquisaContasAtrasadas();
        tela.setVisible(true);
    }//GEN-LAST:event_btVerContasAtrasadasActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        notifica();
    }//GEN-LAST:event_formInternalFrameActivated

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        //Aqui faremos o código do botão Editar
        //Ao clicar nele setamos que os campos podem ser alterados
        tbNome.setEnabled(true);
        tbPreco.setEnabled(true);
        itensParcelas.setEnabled(true);
        itensRepeticao.setEnabled(true);
        calendario.setEnabled(true);
        radioFixo.setEnabled(true);
        radioParcelado.setEnabled(true);        
        //Aqui Faremos para quando ele clicar em Editar ja carregar o radio correto da conta
        //e executar seu comando
        if(radioFixo.isSelected()){
            itensParcelas.setEnabled(false);
        }
        //e que não se pode mais clicar nesses botões
        btPagar.setEnabled(false);
        btEditar.setEnabled(false);
        btSalvar.setEnabled(true);   
    }//GEN-LAST:event_btEditarActionPerformed

    private void radioFixoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFixoActionPerformed
        //Aqui faremos quando ele escolher que a conta será 
        //fixa, os itens de parcelas serão desabilitados
        if(radioFixo.isSelected()){
            itensParcelas.setSelectedItem("0");
            itensParcelas.setEnabled(false);
        }     
    }//GEN-LAST:event_radioFixoActionPerformed

    private void radioParceladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioParceladoActionPerformed
        //Código para caso ele marque que será uma conta parcelada
        //então iremos habilitar os itens de parcela
        if(radioParcelado.isSelected()){
            itensParcelas.setEnabled(true);
        }
    }//GEN-LAST:event_radioParceladoActionPerformed

    private void btVerContasAmanhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVerContasAmanhaActionPerformed
        // 
        PesquisaContasAmanha tela = new PesquisaContasAmanha();
        tela.setVisible(true);
    }//GEN-LAST:event_btVerContasAmanhaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btDeletar;
    public static javax.swing.JButton btEditar;
    private javax.swing.JButton btLimpar;
    public static javax.swing.JButton btPagar;
    public static javax.swing.JButton btSalvar;
    private javax.swing.JButton btVerContas;
    private javax.swing.JButton btVerContasAmanha;
    private javax.swing.JButton btVerContasAtrasadas;
    private javax.swing.JButton btVerContasHoje;
    public static com.github.lgooddatepicker.components.DatePicker calendario;
    public static javax.swing.JComboBox itensParcelas;
    public static javax.swing.JComboBox itensRepeticao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    public static javax.swing.JRadioButton radioFixo;
    public static javax.swing.JRadioButton radioParcelado;
    public static javax.swing.JTextField tbId;
    public static javax.swing.JTextField tbNome;
    public static javax.swing.JTextField tbPreco;
    private javax.swing.JLabel txtTodasContas;
    private javax.swing.JLabel txtTodasContasAtrasadas;
    private javax.swing.JLabel txtTodasContasAtrasadas1;
    private javax.swing.JLabel txtTodasContasHoje;
    // End of variables declaration//GEN-END:variables
    private void LimparCampos() {
        //Aqui sim mandamos ele executar o comando onde exclui o conteudo de todos os textos
        // e damos o foco ao campo Nome
        
        tbId.setText("");
        tbNome.setText("");
        tbPreco.setText("");
        itensParcelas.setSelectedItem("0");
        calendario.setText("");
        tbNome.requestFocus();
  
    }
    
    private void notifica(){
        //Aqui será setada nas notificações a quantidade de contas no total,a pagar hoje,atrasadas e a pagar amanhã
        CRUD_Contas crud = new CRUD_Contas();
        
        txtTodasContas.setText(crud.notifiTodasContas() + "");
        txtTodasContasHoje.setText(crud.notifiTodasContasHoje() + "");
        txtTodasContasAtrasadas1.setText(crud.notifiTodasContasAmanha() + "");
        txtTodasContasAtrasadas.setText(crud.notifiTodasContasAtrasadas() + "");
    }
    
}
